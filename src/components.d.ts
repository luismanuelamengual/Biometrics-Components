/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface BiometricsCamera {
        "close": () => Promise<void>;
        "maxPictureHeight": number;
        "maxPictureWidth": number;
        "mode": "auto" | "native" | "canvas";
        "open": () => Promise<void>;
    }
    interface BiometricsLiveness {
        "apiKey": string;
        "autoStart": boolean;
        "instructions": string[];
        "maxInstructions": number;
        "maxPictureHeight": number;
        "maxPictureWidth": number;
        "messages": any;
        "serverUrl": string;
        "showInitButton": boolean;
        "startSession": () => Promise<void>;
        "stopSession": () => Promise<void>;
        "timeout": number;
    }
}
declare global {
    interface HTMLBiometricsCameraElement extends Components.BiometricsCamera, HTMLStencilElement {
    }
    var HTMLBiometricsCameraElement: {
        prototype: HTMLBiometricsCameraElement;
        new (): HTMLBiometricsCameraElement;
    };
    interface HTMLBiometricsLivenessElement extends Components.BiometricsLiveness, HTMLStencilElement {
    }
    var HTMLBiometricsLivenessElement: {
        prototype: HTMLBiometricsLivenessElement;
        new (): HTMLBiometricsLivenessElement;
    };
    interface HTMLElementTagNameMap {
        "biometrics-camera": HTMLBiometricsCameraElement;
        "biometrics-liveness": HTMLBiometricsLivenessElement;
    }
}
declare namespace LocalJSX {
    interface BiometricsCamera {
        "maxPictureHeight"?: number;
        "maxPictureWidth"?: number;
        "mode"?: "auto" | "native" | "canvas";
        "onPictureCaptured"?: (event: CustomEvent<any>) => void;
    }
    interface BiometricsLiveness {
        "apiKey"?: string;
        "autoStart"?: boolean;
        "instructions"?: string[];
        "maxInstructions"?: number;
        "maxPictureHeight"?: number;
        "maxPictureWidth"?: number;
        "messages"?: any;
        "onInitialized"?: (event: CustomEvent<any>) => void;
        "onSessionCompleted"?: (event: CustomEvent<any>) => void;
        "onSessionEnded"?: (event: CustomEvent<any>) => void;
        "onSessionStarted"?: (event: CustomEvent<any>) => void;
        "serverUrl"?: string;
        "showInitButton"?: boolean;
        "timeout"?: number;
    }
    interface IntrinsicElements {
        "biometrics-camera": BiometricsCamera;
        "biometrics-liveness": BiometricsLiveness;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "biometrics-camera": LocalJSX.BiometricsCamera & JSXBase.HTMLAttributes<HTMLBiometricsCameraElement>;
            "biometrics-liveness": LocalJSX.BiometricsLiveness & JSXBase.HTMLAttributes<HTMLBiometricsLivenessElement>;
        }
    }
}
